<!--

PUNTO 1)

a.       NodeJS: Es un entorno para el backend en especial para la creacion de servidores

b.       .Net core: Es un framework pensado para ejecutar aplicaciones en cualquier ambiente, sea en la nube o en servidores locales. además es
         es importante resaltar que con este framework se pueden desarrollar aplicaciones multiplataformas
        
c.       Spring Boot (Java): spring boot es una mejora de spring framework, muy conocida ya que ayuda a acelerar el proceso de desarrollo
         de una aplicacion, esta tecnologia es excelente para migrar una app a una arquitectua de microservicios 

d.       Python: Es un lenguaje de programación de codigo abierto, muy conocido ya que es muy potente en los trabajos de inteligencia artifical

e.       Scala: Es un lenguaje de programacion que es muy compatible con java, esto lo hace aun mas potente.
         ademas es muy conocido por su fuerte en los trabajos de Big Data

f.        Ruby: Es un lenguaje de programacion, dicen que es un lenguaje muy amigable para los programadores.
          utilizado para cdiferente tipos de aplicaciones, orientada a objetos. 

g.       Rust: es un lenguaje de programacion muy fuerte en el lado del cliente y el servidor

                                    VENTAJAS                  DESVENTAJAS
a.       NodeJS               |- Asincrono                 - Callbacks
                              |
                              |- Mmodular                  - La arquitectura no es tan potente como la de java
                              |
                              |- Opensource
                              |
                              |
b.       .Net core            |- Multiplataforma           - El costo de migrar de frameworks anteriores a .net core es muy alto
                              |
                              |-Fuerte en microservicios   - Hay librerias del framework anterior que no se pueden utilizar
                              |
                              |-Performance
                              |                                                         
c.       Spring Boot (Java)   |-Desarrollo orientado a     - Maniene en constante actualizacion y ocasiona problemas en migracion
                              | componentes
                              |- Potente en microservicios - Poca documentación
                              |
                              |- No se requieren xml para  - Sus componentes front son muy limitados
                              |su configuracion
                              |
d.       Python               |- Potente en IA             -Problemas en la seguridad
                              |
                              |- Flexible en cuanto        - La ejecucion de un programa en python no es tan rapida como por ejemplo uno en c
                              |a la programacion
                              |- Abundancia de bibliotecas
                              |                              
e.       Scala                |- Fuerte en Big Data        -no es muy compatible para las versiones viejas de scala ni de java
                              |
                              |- Adaptable con java        -No es ta buena su documentacion
                              |
                              |-Open source
                              |
f.       Ruby                 |-Opensource                 -No tiene soporte unicode
                              |
                              |-Menos lineas de codigo     -Interpretacion de cada navegador es diferente
                              |
                              |-Extensa comunidad          -Etiquetas limitadas
                              |                              
g.       Rust                 |-Tan eficiente como c       -No cuenta con recolector de basura
                              |
                              |-modular                    
                              |
                              |-Permite trabajar 
                              | directamente con
                              | el procesador
                              

PUNTO 2)


--> .net core ya que se puede trabajar en diferentes lenguajes c#,c++,f#..etc
es un entorno perfecto para crear microservicios,es multiplataforma y ademas es un producto de microsoft.

PUNTO 3

-->  Programación funcional: esta basada en en funciones, es un paradigma de programacion en donde se tiene una entrada(parametro) 
para realizar un proceso y retornar una respuesta(salida)

-->  Programación orientada a objetos: Es un paradigma de programación en donde los objetos son una instancia de la vida real, se utilizan para estructurar los datos y darles un sentido.
-->  Programación orientada a eventos: Es un paradigma de programación que dependede los eventos que sucedan en la ejecucion de un programa por ejemplo un KEYUP
-->  Programación reactiva: Es un paradigma de programación basado en el manejo de flujo de datos de una manera asincrona
-->  Programación orientada a servicios (soa) : Es un marco de trabajo la cual consiste en organizar los diferentes servicios de un sistema, modularizarlos y mejorar su interaccion
--> Microservicios: Es una arquitectura basada en modularizar los servicios y que estos a su vez sean autonomos, estos son pequeños y son independientes no como en soa





